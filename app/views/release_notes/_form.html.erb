<%= form_with(model: @release_note.persisted? ? @release_note : [@works_order, @release_note], local: true) do |form| %>
  <% if @release_note.errors.any? %>
    <div class="bg-red-50 border border-red-200 rounded-md p-4 mb-6">
      <div class="flex">
        <div class="flex-shrink-0">
          <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
          </svg>
        </div>
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            There were <%= pluralize(@release_note.errors.count, "error") %> with your submission:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc list-inside">
              <% @release_note.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="bg-white shadow-sm rounded-lg">
    <div class="px-4 py-5 sm:p-6">
      <div class="grid grid-cols-1 gap-y-6 gap-x-4 sm:grid-cols-6">

        <!-- Date Field -->
        <div class="sm:col-span-2">
          <%= form.label :date, class: "block text-sm font-medium text-gray-700" %>
          <%= form.date_field :date, class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
        </div>

        <!-- Quantity Accepted -->
        <div class="sm:col-span-2">
          <%= form.label :quantity_accepted, class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :quantity_accepted, min: 0, max: @works_order.unreleased_quantity,
                                class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
          <p class="mt-1 text-xs text-gray-500">
            Maximum: <%= @works_order.unreleased_quantity %> (remaining unreleased)
          </p>
        </div>

        <!-- Quantity Rejected -->
        <div class="sm:col-span-2">
          <%= form.label :quantity_rejected, class: "block text-sm font-medium text-gray-700" %>
          <%= form.number_field :quantity_rejected, min: 0, max: @works_order.unreleased_quantity,
                                class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
        </div>

        <!-- Thickness Measurements Section (Conditional) -->
        <% if @release_note.requires_thickness_measurements? %>
          <div class="sm:col-span-6">
            <div class="border-t border-gray-200 pt-6">
              <h3 class="text-lg font-medium text-gray-900 mb-4">
                Thickness Measurements
                <span class="text-sm font-normal text-gray-500">(Required for Aerospace/Defense)</span>
              </h3>

              <div class="grid grid-cols-1 gap-y-4 gap-x-4 sm:grid-cols-2">
                <% @release_note.get_required_treatments.each do |treatment| %>
                  <%
                    treatment_id = treatment[:treatment_id]
                    display_name = treatment[:display_name]
                    target_thickness = treatment[:target_thickness]
                    current_value = @release_note.get_thickness_measurement(treatment_id)
                    field_name = "thickness_measurement_#{treatment_id}"
                  %>
                  <div>
                    <label for="<%= field_name %>" class="block text-sm font-medium text-gray-700">
                      <%= display_name %> Thickness
                      <span class="text-red-500">*</span>
                      <% if target_thickness && target_thickness > 0 %>
                        <span class="text-sm text-gray-500">(Target: <%= target_thickness %>μm)</span>
                      <% end %>
                    </label>
                    <div class="mt-1 relative rounded-md shadow-sm">
                      <%= text_field_tag field_name, current_value,
                            id: field_name,
                            pattern: "[0-9]+(\.[0-9]+)?",
                            placeholder: target_thickness && target_thickness > 0 ? "e.g. #{target_thickness}" : "e.g. 25.4",
                            class: "block w-full pr-12 border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
                            required: true,
                            data: {
                              treatment_id: treatment_id,
                              process_type: treatment[:process_type],
                              target_thickness: target_thickness,
                              display_name: display_name
                            } %>
                      <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                        <span class="text-gray-500 sm:text-sm">µm</span>
                      </div>
                    </div>
                    <p class="mt-1 text-xs text-gray-500">
                      Measured coating thickness (3 significant figures)
                    </p>
                  </div>
                <% end %>
              </div>

              <div class="mt-4 p-3 bg-blue-50 rounded-md">
                <div class="flex">
                  <div class="flex-shrink-0">
                    <svg class="h-5 w-5 text-blue-400" viewBox="0 0 20 20" fill="currentColor">
                      <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z" clip-rule="evenodd" />
                    </svg>
                  </div>
                  <div class="ml-3 flex-1">
                    <p class="text-sm text-blue-700">
                      <strong>Measurement Requirements:</strong>
                      Thickness measurements are required for aerospace/defense parts with anodising or electroless nickel plating.
                      Enter measurements to 3 significant figures. Multiple treatments of the same type may require separate measurements.
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <% end %>

        <!-- Remarks -->
        <div class="sm:col-span-6">
          <%= form.label :remarks, class: "block text-sm font-medium text-gray-700" %>
          <%= form.text_area :remarks, rows: 3,
                             class: "mt-1 block w-full border-gray-300 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
                             placeholder: "Optional remarks about this release..." %>
        </div>

        <!-- No Invoice Checkbox -->
        <div class="sm:col-span-6">
          <div class="flex items-start">
            <div class="flex items-center h-5">
              <%= form.check_box :no_invoice, class: "focus:ring-blue-500 h-4 w-4 text-blue-600 border-gray-300 rounded" %>
            </div>
            <div class="ml-3 text-sm">
              <%= form.label :no_invoice, "Do not invoice this release", class: "font-medium text-gray-700" %>
              <p class="text-gray-500">Check this if this release should not generate an invoice (e.g., reworks, samples)</p>
            </div>
          </div>
        </div>

      </div>
    </div>

    <!-- Form Actions -->
    <div class="px-4 py-3 bg-gray-50 text-right sm:px-6">
      <%= link_to 'Cancel', @works_order,
                  class: "bg-white py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 mr-3" %>
      <%= form.submit (@release_note.persisted? ? "Update Release Note" : "Create Release Note"),
                      class: "inline-flex justify-center py-2 px-4 border border-transparent shadow-sm text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500" %>
    </div>
  </div>

  <!-- JavaScript for handling thickness measurements -->
  <% if @release_note.requires_thickness_measurements? %>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const form = document.querySelector('form');
        const thicknessFields = document.querySelectorAll('[data-treatment-id]');

        form.addEventListener('submit', function(e) {
          // Collect thickness measurements and prepare them for submission
          const measurements = [];

          thicknessFields.forEach(function(field) {
            const treatmentId = field.dataset.treatmentId;
            const processType = field.dataset.processType;
            const targetThickness = field.dataset.targetThickness;
            const displayName = field.dataset.displayName;
            const value = field.value.trim();

            if (value) {
              measurements.push({
                treatment_id: treatmentId,
                process_type: processType,
                target_thickness: parseFloat(targetThickness) || 0,
                display_name: displayName,
                measured_thickness: parseFloat(value)
              });
            }
          });

          // Add hidden field with JSON data
          const hiddenField = document.createElement('input');
          hiddenField.type = 'hidden';
          hiddenField.name = 'release_note[measured_thicknesses]';
          hiddenField.value = JSON.stringify({ measurements: measurements });
          form.appendChild(hiddenField);
        });

        // Optional: Add real-time validation
        thicknessFields.forEach(function(field) {
          field.addEventListener('input', function(e) {
            const value = parseFloat(e.target.value);
            const targetThickness = parseFloat(e.target.dataset.targetThickness);

            // Remove any existing validation styling
            e.target.classList.remove('border-red-300', 'border-yellow-300');

            if (isNaN(value) || value <= 0) {
              // Invalid value
              e.target.classList.add('border-red-300');
            } else if (targetThickness && Math.abs(value - targetThickness) > (targetThickness * 0.2)) {
              // More than 20% deviation from target - show warning
              e.target.classList.add('border-yellow-300');
            }
          });
        });
      });
    </script>
  <% end %>

<% end %>
