<%# app/views/part_processing_instructions/_form.html.erb %>
<%= form_with model: ppi, local: true, class: "space-y-6" do |form| %>
  <% if @part.present? %>
    <%= hidden_field_tag :part_id, @part.id %>
  <% end %>

  <% if ppi.errors.any? %>
    <div class="bg-red-50 border border-red-200 rounded-md p-4">
      <div class="flex">
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(ppi.errors.count, "error") %> prohibited this PPI from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc list-inside space-y-1">
              <% ppi.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Part Processing Instruction Details</h3>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      <!-- Customer Selection -->
      <div>
        <%= form.label :customer_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :customer_id,
            options_for_select([['Select Customer', '']] + @customers.map { |c| [c.name, c.id] }, ppi.customer_id),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm #{'bg-gray-100' if @part.present?}",
              required: true,
              disabled: ppi.persisted? || @part.present? # Can't change if editing or from specific part
            } %>
        <% if ppi.persisted? || @part.present? %>
          <p class="mt-1 text-xs text-gray-500">Customer cannot be changed</p>
        <% end %>
      </div>

      <!-- Part Number -->
      <div>
        <%= form.label :part_number, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.text_field :part_number,
            value: ppi.part_number || @part&.uniform_part_number,
            placeholder: "Enter part number",
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm font-mono #{'bg-gray-100' if @part.present?}",
            required: true,
            readonly: @part.present? %>
        <% if @part.present? %>
          <p class="mt-1 text-xs text-gray-500">Pre-filled from selected part</p>
        <% else %>
          <p class="mt-1 text-xs text-gray-500">Will be automatically normalized</p>
        <% end %>
      </div>

      <!-- Part Issue -->
      <div>
        <%= form.label :part_issue, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.text_field :part_issue,
            value: ppi.part_issue || @part&.uniform_part_issue || 'A',
            placeholder: "A",
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm font-mono #{'bg-gray-100' if @part.present?}",
            required: true,
            readonly: @part.present? %>
        <% if @part.present? %>
          <p class="mt-1 text-xs text-gray-500">Pre-filled from selected part</p>
        <% end %>
      </div>

      <!-- Part Description -->
      <div>
        <%= form.label :part_description, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.text_field :part_description,
            value: ppi.part_description || (@part.present? ? "#{@part.uniform_part_number} component" : ""),
            placeholder: "Brief description of the part",
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
      </div>

      <!-- Enabled Status (for editing) -->
      <% if ppi.persisted? %>
        <div>
          <%= form.label :enabled, class: "block text-sm font-medium text-gray-700 mb-1" %>
          <div class="mt-1">
            <%= form.check_box :enabled, class: "rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-offset-0 focus:ring-blue-200 focus:ring-opacity-50" %>
            <%= form.label :enabled, "PPI is enabled", class: "ml-2 text-sm text-gray-900" %>
          </div>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Process Selection Section -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Process Selection</h3>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-4">
      <!-- Alloy Selection -->
      <div>
        <%= label_tag :alloy, "Alloy", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= select_tag :alloy,
            options_for_select([['Select Alloy', '']] + @alloy_options, params[:alloy]),
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "alloy_select",
              onchange: "suggestProcesses()"
            } %>
      </div>

      <!-- Process Type Selection -->
      <div>
        <%= label_tag :process_type_selection, "Process Type", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= select_tag :process_type_selection,
            options_for_select([['Select Process Type', '']] + @process_type_options, params[:process_type]),
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "process_type_select",
              onchange: "suggestProcesses()"
            } %>
      </div>

      <!-- Target Thickness -->
      <div>
        <%= label_tag :target_thickness, "Target Thickness (Î¼m)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= number_field_tag :target_thickness,
            params[:target_thickness],
            {
              placeholder: "25",
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "thickness_input",
              onchange: "suggestProcesses()",
              step: 0.5
            } %>
        <p class="mt-1 text-xs text-gray-500">Optional - helps filter suggestions</p>
      </div>

      <!-- Anodic Class -->
      <div>
        <%= label_tag :anodic_class, "Anodic Class", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= select_tag :anodic_class,
            options_for_select(@class_options, params[:anodic_class]),
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "class_select",
              onchange: "suggestProcesses()"
            } %>
      </div>
    </div>

    <!-- Process Suggestions -->
    <div id="process_suggestions" class="mt-6">
      <% if @suggested_processes&.any? %>
        <%= render 'process_suggestions', processes: @suggested_processes %>
      <% else %>
        <div class="text-center py-4 text-gray-500">
          <p>Select alloy and process type to see suggested processes</p>
        </div>
      <% end %>
    </div>
  </div>

  <!-- Specification Section -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Specification</h3>

    <!-- Hidden field to store selected process ID -->
    <%= hidden_field_tag :selected_process_id, "", id: "selected_process_id" %>

    <!-- Process Type (hidden, will be set by process selection) -->
    <%= form.hidden_field :process_type %>

    <!-- Specification Text Area -->
    <div>
      <%= form.label :specification, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.text_area :specification,
          placeholder: "Enter processing specification and requirements...",
          rows: 6,
          class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
          id: "specification_textarea" %>
      <p class="mt-1 text-xs text-gray-500">This will become the operation text on route cards. Select a process above to auto-populate, or write custom specification.</p>
    </div>

    <!-- Special Instructions -->
    <div class="mt-6">
      <%= form.label :special_instructions, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.text_area :special_instructions,
          placeholder: "Any special handling or processing instructions...",
          rows: 3,
          class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
      <p class="mt-1 text-xs text-gray-500">Optional special instructions or notes</p>
    </div>
  </div>

  <!-- Information Box -->
  <div class="bg-blue-50 border border-blue-200 rounded-md p-4">
    <div class="flex">
      <div class="ml-3">
        <h3 class="text-sm font-medium text-blue-800">Process Library Integration</h3>
        <div class="mt-2 text-sm text-blue-700">
          <p>Select your alloy and process type above to see suggested standard processes.
          Selecting a process will automatically populate the specification field with the operation text
          that will appear on route cards. You can still modify the specification as needed.</p>
        </div>
      </div>
    </div>
  </div>

  <!-- Form Actions -->
  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel",
        ppi.persisted? ? ppi : (@part.present? ? @part : part_processing_instructions_path),
        class: "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded" %>
    <%= form.submit ppi.persisted? ? "Update PPI" : "Create PPI",
        class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
  </div>
<% end %>

<!-- JavaScript for Process Suggestions -->
<script>
function suggestProcesses() {
  const alloy = document.getElementById('alloy_select').value;
  const processType = document.getElementById('process_type_select').value;
  const thickness = document.getElementById('thickness_input').value;
  const anodic_class = document.getElementById('class_select').value;

  if (!alloy || !processType) {
    document.getElementById('process_suggestions').innerHTML =
      '<div class="text-center py-4 text-gray-500"><p>Select alloy and process type to see suggested processes</p></div>';
    return;
  }

  const params = new URLSearchParams({
    alloy: alloy,
    process_type: processType
  });

  if (thickness) params.append('target_thickness', thickness);
  if (anodic_class) params.append('anodic_class', anodic_class);

  fetch(`<%= suggest_processes_part_processing_instructions_path %>?${params}`, {
    headers: {
      'Accept': 'text/html',
      'X-Requested-With': 'XMLHttpRequest'
    }
  })
  .then(response => response.text())
  .then(html => {
    document.getElementById('process_suggestions').innerHTML = html;
  })
  .catch(error => {
    console.error('Error fetching processes:', error);
    document.getElementById('process_suggestions').innerHTML =
      '<div class="text-center py-4 text-red-500"><p>Error loading processes</p></div>';
  });
}

function selectProcess(processId, operationText, processType) {
  // Set the hidden field
  document.getElementById('selected_process_id').value = processId;

  // Update the process type hidden field
  document.getElementById('part_processing_instruction_process_type').value = processType;

  // Populate the specification textarea
  document.getElementById('specification_textarea').value = operationText;

  // Visual feedback - highlight selected process
  document.querySelectorAll('.process-option').forEach(el => {
    el.classList.remove('ring-2', 'ring-blue-500', 'bg-blue-50');
  });

  const selectedElement = document.querySelector(`[data-process-id="${processId}"]`);
  if (selectedElement) {
    selectedElement.classList.add('ring-2', 'ring-blue-500', 'bg-blue-50');
  }
}
</script>
