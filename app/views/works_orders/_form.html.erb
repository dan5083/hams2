<%# app/views/works_orders/_form.html.erb - Enhanced form with auto-pricing and part browser modal %>
<%= form_with model: works_order, local: true, class: "space-y-6" do |form| %>
  <% if works_order.errors.any? %>
    <div class="bg-red-50 border border-red-200 rounded-md p-4">
      <div class="flex">
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(works_order.errors.count, "error") %> prohibited this works order from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc list-inside space-y-1">
              <% works_order.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Works Order Details</h3>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      <!-- Customer Order Selection -->
      <div class="sm:col-span-2">
        <%= form.label :customer_order_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <% if @customer_order.present? && @customer_orders.length == 1 %>
          <!-- Show as read-only text when pre-selected -->
          <div class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-50 text-gray-900">
            <%= @customer_order.customer.name %> - <%= @customer_order.number %>
          </div>
          <%= form.hidden_field :customer_order_id, value: @customer_order.id %>
          <p class="mt-1 text-xs text-gray-500">Pre-selected from the customer order you came from</p>
        <% else %>
          <%= form.select :customer_order_id,
              options_for_select(
                [['Select Customer Order', '']] +
                (@customer_orders&.map { |co| ["#{co.customer.name} - #{co.number}", co.id] } || []),
                works_order.customer_order_id
              ),
              {},
              {
                class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              } %>
        <% end %>
      </div>

      <!-- Customer Reference (optional) -->
      <div class="sm:col-span-2">
        <%= form.label :customer_reference, "Customer Reference (optional)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.text_field :customer_reference,
            placeholder: "e.g., PO number, line item, serial number",
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
        <p class="mt-1 text-xs text-gray-500">
          Optional field for customer's internal reference. For serial numbers, and serial number-like things.
        </p>
      </div>

      <!-- Part Number Selection with Modal Browser -->
      <div class="sm:col-span-2">
        <%= form.label :part_id, "Part Number", class: "block text-sm font-medium text-gray-700 mb-1" %>

        <!-- Hidden field to store the actual part_id -->
        <%= form.hidden_field :part_id, id: "selected_part_id" %>

        <!-- Display field showing selected part (read-only) -->
        <div class="flex gap-2">
          <input type="text"
                 id="selected_part_display"
                 readonly
                 placeholder="Click 'Browse Parts' to select..."
                 value="<%= works_order.part ? "#{works_order.part.part_number} - #{works_order.part.part_issue}" : '' %>"
                 class="flex-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-50 text-gray-900 sm:text-sm cursor-default">

          <!-- Browse button -->
          <button type="button"
                  onclick="openPartBrowserModal()"
                  class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            <svg class="h-5 w-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            Browse Parts
          </button>

          <!-- Clear button (only show if part is selected) -->
          <button type="button"
                  id="clear_part_button"
                  onclick="clearSelectedPart()"
                  style="<%= works_order.part_id.present? ? '' : 'display: none;' %>"
                  class="inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-md text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
            Clear
          </button>
        </div>

        <p class="mt-1 text-xs text-gray-500">
          Select a part from the browser. You can search/filter and copy-paste part numbers.
          <% if @customer_order.present? %>
            If you don't see the part <%= link_to "create it here", new_part_path(customer_id: @customer_order.customer.id),
                target: "_blank",
                class: "text-blue-600 hover:text-blue-800 underline",
                rel: "noopener noreferrer" %>
          <% else %>
            If you don't see the part <%= link_to "create it here", new_part_path,
                target: "_blank",
                class: "text-blue-600 hover:text-blue-800 underline",
                rel: "noopener noreferrer" %>
          <% end %>
          and then <%= link_to "refresh", request.url,
              class: "text-blue-600 hover:text-blue-800 underline cursor-pointer",
              onclick: "location.reload(); return false;" %>
        </p>
      </div>

      <!-- Quantity -->
      <div>
        <%= form.label :quantity, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.number_field :quantity,
            placeholder: "Enter quantity",
            min: 1,
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
            required: true,
            onchange: "recalculateTotalPrice()" %>
      </div>

      <!-- Release Level -->
      <div>
        <%= form.label :release_level_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :release_level_id,
            options_for_select([['Select Release Level', '']] + @release_levels.map { |rl| [rl.name, rl.id] }, works_order.release_level_id),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true
            } %>
      </div>

      <!-- Transport Method -->
      <div>
        <%= form.label :transport_method_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :transport_method_id,
            options_for_select([['Select Transport Method', '']] + @transport_methods.map { |tm| [tm.name, tm.id] }, works_order.transport_method_id),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true
            } %>
      </div>
    </div>
  </div>

  <!-- Pricing Section -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Pricing</h3>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      <!-- Price Type -->
      <div class="sm:col-span-2">
        <%= form.label :price_type, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :price_type,
            options_for_select([
              ['Each (price per part)', 'each'],
              ['Lot (total job price)', 'lot']
            ], works_order.price_type || 'each'),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true,
              onchange: "togglePriceFields(this.value)"
            } %>
      </div>

      <!-- Each Price (shown when price_type is 'each') -->
      <div id="each_price_field" class="sm:col-span-1" style="<%= works_order.price_type == 'lot' ? 'display: none;' : '' %>">
        <%= form.label :each_price, "Price per part (£)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <%= form.number_field :each_price,
              step: 0.01,
              min: 0,
              placeholder: "0.00",
              class: "block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "each_price_input",
              onblur: "formatCurrency(this)",
              onchange: "recalculateTotalPrice()" %>
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Enter the price per individual part (auto-populated from part standard price)
        </p>
      </div>

      <!-- Total Price Display (shown when price_type is 'each') -->
      <div id="total_price_display" class="sm:col-span-1" style="<%= works_order.price_type == 'lot' ? 'display: none;' : '' %>">
        <label class="block text-sm font-medium text-gray-700 mb-1">Total Job Price (calculated)</label>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <input type="text"
                 id="total_price_readonly"
                 readonly
                 placeholder="0.00"
                 class="block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-50 text-gray-900 sm:text-sm cursor-not-allowed">
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Automatically calculated as: quantity × price per part
        </p>
      </div>

      <!-- Lot Price (shown when price_type is 'lot') -->
      <div id="lot_price_field" class="sm:col-span-2" style="<%= works_order.price_type == 'each' ? 'display: none;' : '' %>">
        <%= form.label :lot_price, "Total job price (£)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <%= form.number_field :lot_price,
              step: 0.01,
              min: 0,
              placeholder: "0.00",
              class: "block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "lot_price_input",
              onblur: "formatCurrency(this)" %>
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Enter the total price for the entire job regardless of quantity (includes minimum charges, setup fees, etc.)
        </p>
      </div>
    </div>
  </div>

  <!-- Additional Charges -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Additional Charges (for invoicing)</h3>

    <div class="grid grid-cols-1 gap-6">
      <!-- Additional Charges Checkboxes -->
      <div>
        <%= form.label :selected_charge_ids, "Select Additional Charges", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <% if defined?(@additional_charge_presets) && @additional_charge_presets.any? %>
          <div class="mt-1 space-y-2 max-h-64 overflow-y-auto border border-gray-300 rounded-md p-3 bg-white">
            <% @additional_charge_presets.each do |preset| %>
              <label class="flex items-start">
                <%= check_box_tag "works_order[selected_charge_ids][]",
                    preset.id,
                    works_order.selected_charge_ids&.include?(preset.id.to_s),
                    {
                      class: "rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-offset-0 focus:ring-blue-200 focus:ring-opacity-50 mt-0.5 flex-shrink-0",
                      onchange: "handleAdditionalChargeSelection()"
                    } %>
                <span class="ml-2 text-sm text-gray-900 leading-tight">
                  <strong><%= preset.name %></strong>
                  <% if preset.is_variable? %>
                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-yellow-100 text-yellow-800 ml-2">
                      Variable
                    </span>
                  <% else %>
                    <span class="text-green-600 font-semibold ml-2">£<%= sprintf("%.2f", preset.amount) %></span>
                  <% end %>
                  <% if preset.description.present? %>
                    <br>
                    <span class="text-gray-600 text-xs"><%= preset.description %></span>
                  <% end %>
                </span>
              </label>
            <% end %>
          </div>
          <!-- Hidden field to ensure empty array is sent when nothing is selected -->
          <%= hidden_field_tag "works_order[selected_charge_ids][]", "", id: "additional_charge_placeholder" %>
          <p class="mt-1 text-xs text-gray-500">
            Select charges to include when creating invoices from this works order. Variable charges will allow custom amounts.
          </p>
        <% else %>
          <div class="mt-1 border border-gray-300 rounded-md p-3 bg-gray-50 text-gray-500 text-sm">
            No additional charges available. Check that additional charge presets have been created and are enabled.
          </div>
        <% end %>
      </div>

      <!-- Variable Charge Amount Inputs (hidden by default) -->
      <div id="variable_charges_section" class="hidden">
        <h4 class="text-sm font-medium text-gray-700 mb-2">Variable Charge Amounts</h4>
        <div id="variable_charge_inputs">
          <!-- Dynamic inputs will be added here by JavaScript -->
        </div>
      </div>
    </div>
  </div>

  <!-- Form Actions -->
  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel", works_order.persisted? ? works_order : works_orders_path,
        class: "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded" %>
    <%= form.submit works_order.persisted? ? "Update Works Order" : "Create Works Order",
        class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
  </div>
<% end %>

<!-- Part Browser Modal -->
<div id="partBrowserModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 max-w-4xl shadow-lg rounded-md bg-white">
    <!-- Modal Header -->
    <div class="flex justify-between items-center pb-3 border-b">
      <h3 class="text-xl font-semibold text-gray-900">Select Part</h3>
      <button type="button" onclick="closePartBrowserModal()" class="text-gray-400 hover:text-gray-500">
        <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>

    <!-- Search Box -->
    <div class="mt-4">
      <input type="text"
             id="partSearchInput"
             placeholder="Search by part number, issue, or description... (try copy-pasting)"
             onkeyup="filterPartsList()"
             class="w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">
      <p class="mt-1 text-xs text-gray-500">
        💡 Tip: You can paste a part number directly and it will filter instantly
      </p>
    </div>

    <!-- Parts List -->
    <div class="mt-4 border border-gray-300 rounded-md overflow-hidden">
      <div id="partsListContainer" class="max-h-96 overflow-y-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50 sticky top-0">
            <tr>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Part Number</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Issue</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Description</th>
              <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Price</th>
              <th class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Action</th>
            </tr>
          </thead>
          <tbody id="partsListBody" class="bg-white divide-y divide-gray-200">
            <!-- Parts will be populated here by JavaScript -->
          </tbody>
        </table>
      </div>
      <div id="noPartsMessage" class="hidden p-8 text-center text-gray-500">
        No parts found matching your search.
      </div>
    </div>

    <!-- Modal Footer -->
    <div class="mt-4 flex justify-end">
      <button type="button"
              onclick="closePartBrowserModal()"
              class="px-4 py-2 bg-gray-300 hover:bg-gray-400 text-gray-800 font-semibold rounded-md">
        Close
      </button>
    </div>
  </div>
</div>

<!-- JavaScript -->
<script>
// Parts data for JavaScript - ENHANCED with pricing
window.partsData = {
  <% if defined?(@parts) && @parts %>
    <% @parts.each do |part| %>
      "<%= part.id %>": {
        "id": "<%= part.id %>",
        "part_number": "<%= j part.part_number %>",
        "part_issue": "<%= j part.part_issue %>",
        "description": "<%= j (part.description.presence || '') %>",
        "each_price": "<%= part.each_price || 0 %>"
      },
    <% end %>
  <% end %>
};

// Additional charges data for JavaScript
window.additionalChargesData = {
  <% if defined?(@additional_charge_presets) && @additional_charge_presets %>
    <% @additional_charge_presets.each do |preset| %>
      "<%= preset.id %>": {
        "name": "<%= j preset.name %>",
        "is_variable": <%= preset.is_variable? %>,
        "amount": <%= preset.amount || 0 %>,
        "display_name": "<%= j preset.display_name %>"
      },
    <% end %>
  <% end %>
};

// Store all parts as an array for filtering
window.allParts = Object.values(window.partsData);

// ============================================================================
// PART BROWSER MODAL FUNCTIONS
// ============================================================================

function openPartBrowserModal() {
  const modal = document.getElementById('partBrowserModal');
  modal.classList.remove('hidden');

  // Populate the parts list
  populatePartsList(window.allParts);

  // Focus on search input
  setTimeout(() => {
    document.getElementById('partSearchInput').focus();
  }, 100);
}

function closePartBrowserModal() {
  const modal = document.getElementById('partBrowserModal');
  modal.classList.add('hidden');

  // Clear search
  document.getElementById('partSearchInput').value = '';
}

function populatePartsList(parts) {
  const tbody = document.getElementById('partsListBody');
  const noPartsMessage = document.getElementById('noPartsMessage');

  tbody.innerHTML = '';

  if (parts.length === 0) {
    noPartsMessage.classList.remove('hidden');
    return;
  } else {
    noPartsMessage.classList.add('hidden');
  }

  parts.forEach(part => {
    const row = document.createElement('tr');
    row.className = 'hover:bg-gray-50 cursor-pointer';
    row.onclick = () => selectPart(part);

    row.innerHTML = `
      <td class="px-4 py-3 text-sm font-medium text-gray-900">${part.part_number}</td>
      <td class="px-4 py-3 text-sm text-gray-700">${part.part_issue}</td>
      <td class="px-4 py-3 text-sm text-gray-600">${part.description || '-'}</td>
      <td class="px-4 py-3 text-sm text-gray-700">£${parseFloat(part.each_price).toFixed(2)}</td>
      <td class="px-4 py-3 text-right text-sm">
        <button type="button"
                onclick="selectPart(window.partsData['${part.id}']); event.stopPropagation();"
                class="inline-flex items-center px-3 py-1 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700">
          Select
        </button>
      </td>
    `;

    tbody.appendChild(row);
  });
}

function filterPartsList() {
  const searchTerm = document.getElementById('partSearchInput').value.toUpperCase().trim();

  if (searchTerm === '') {
    populatePartsList(window.allParts);
    return;
  }

  const filteredParts = window.allParts.filter(part => {
    return part.part_number.toUpperCase().includes(searchTerm) ||
           part.part_issue.toUpperCase().includes(searchTerm) ||
           (part.description && part.description.toUpperCase().includes(searchTerm));
  });

  populatePartsList(filteredParts);
}

function selectPart(part) {
  // Update hidden field with part ID
  document.getElementById('selected_part_id').value = part.id;

  // Update display field
  document.getElementById('selected_part_display').value = `${part.part_number} - ${part.part_issue}`;

  // Show clear button
  document.getElementById('clear_part_button').style.display = 'inline-flex';

  // Auto-populate price if available
  const eachPriceField = document.getElementById('each_price_input');
  if (part.each_price && parseFloat(part.each_price) > 0) {
    eachPriceField.value = parseFloat(part.each_price).toFixed(2);
    recalculateTotalPrice();
    showPriceAutoPopulatedNotification();
  }

  // Close modal
  closePartBrowserModal();
}

function clearSelectedPart() {
  // Clear hidden field
  document.getElementById('selected_part_id').value = '';

  // Clear display field
  document.getElementById('selected_part_display').value = '';

  // Hide clear button
  document.getElementById('clear_part_button').style.display = 'none';

  // Clear price
  document.getElementById('each_price_input').value = '';
  recalculateTotalPrice();
}

// ============================================================================
// PRICING FUNCTIONS
// ============================================================================

function formatCurrency(input) {
  let value = input.value;
  value = value.replace(/[^\d.]/g, '');
  const parts = value.split('.');
  if (parts.length > 2) {
    value = parts[0] + '.' + parts.slice(1).join('');
  }
  const numValue = parseFloat(value);
  if (!isNaN(numValue) && numValue >= 0) {
    input.value = numValue.toFixed(2);
  } else if (value === '' || value === '.') {
    input.value = '';
  } else {
    input.value = '0.00';
  }
  if (input.id === 'each_price_input') {
    recalculateTotalPrice();
  }
}

function showPriceAutoPopulatedNotification() {
  const eachPriceField = document.getElementById('each_price_input');
  const originalBorder = eachPriceField.style.borderColor;
  eachPriceField.style.borderColor = '#10B981';
  eachPriceField.style.backgroundColor = '#F0FDF4';
  setTimeout(() => {
    eachPriceField.style.borderColor = originalBorder;
    eachPriceField.style.backgroundColor = '';
  }, 1500);
}

function recalculateTotalPrice() {
  const priceType = document.getElementById('works_order_price_type').value;
  if (priceType === 'each') {
    const quantity = parseInt(document.getElementById('works_order_quantity').value) || 0;
    const eachPrice = parseFloat(document.getElementById('each_price_input').value) || 0;
    const totalPrice = quantity * eachPrice;
    const totalPriceDisplay = document.getElementById('total_price_readonly');
    if (totalPriceDisplay) {
      totalPriceDisplay.value = totalPrice.toFixed(2);
    }
  }
}

function togglePriceFields(priceType) {
  const eachPriceField = document.getElementById('each_price_field');
  const totalPriceDisplay = document.getElementById('total_price_display');
  const lotPriceField = document.getElementById('lot_price_field');
  const eachPriceInput = document.getElementById('each_price_input');
  const lotPriceInput = document.getElementById('lot_price_input');

  if (priceType === 'each') {
    eachPriceField.style.display = 'block';
    totalPriceDisplay.style.display = 'block';
    lotPriceField.style.display = 'none';
    eachPriceInput.required = true;
    lotPriceInput.required = false;
    recalculateTotalPrice();
  } else {
    eachPriceField.style.display = 'none';
    totalPriceDisplay.style.display = 'none';
    lotPriceField.style.display = 'block';
    lotPriceInput.required = true;
    eachPriceInput.required = false;
    eachPriceInput.value = '';
  }
}

// ============================================================================
// ADDITIONAL CHARGES FUNCTIONS
// ============================================================================

function handleAdditionalChargeSelection() {
  const checkboxes = document.querySelectorAll('input[name="works_order[selected_charge_ids][]"]:checked');
  const variableSection = document.getElementById('variable_charges_section');
  const variableInputs = document.getElementById('variable_charge_inputs');

  if (variableInputs) {
    variableInputs.innerHTML = '';
  }

  let hasVariableCharges = false;

  checkboxes.forEach(checkbox => {
    if (checkbox.value === '') return;
    const chargeId = checkbox.value;
    const chargeData = window.additionalChargesData[chargeId];

    if (chargeData && chargeData.is_variable) {
      hasVariableCharges = true;
      const inputDiv = document.createElement('div');
      inputDiv.className = 'mb-3';
      inputDiv.innerHTML = `
        <label for="custom_amount_${chargeId}" class="block text-sm font-medium text-gray-700 mb-1">
          ${chargeData.name} - Custom Amount (£)
        </label>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <input type="number"
                 name="works_order[custom_amounts][${chargeId}]"
                 id="custom_amount_${chargeId}"
                 step="0.01"
                 min="0"
                 placeholder="${chargeData.amount}"
                 class="block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Default: £${chargeData.amount} (leave blank to use default)
        </p>
      `;
      if (variableInputs) {
        variableInputs.appendChild(inputDiv);
      }
    }
  });

  if (variableSection) {
    if (hasVariableCharges) {
      variableSection.classList.remove('hidden');
    } else {
      variableSection.classList.add('hidden');
    }
  }
}

// ============================================================================
// INITIALIZATION
// ============================================================================

document.addEventListener('DOMContentLoaded', function() {
  const priceTypeSelect = document.querySelector('#works_order_price_type');
  if (priceTypeSelect) {
    togglePriceFields(priceTypeSelect.value);
  }

  const eachPriceInput = document.getElementById('each_price_input');
  const lotPriceInput = document.getElementById('lot_price_input');

  if (eachPriceInput && eachPriceInput.value) {
    formatCurrency(eachPriceInput);
  }

  if (lotPriceInput && lotPriceInput.value) {
    formatCurrency(lotPriceInput);
  }

  recalculateTotalPrice();
  handleAdditionalChargeSelection();
});
</script>

<style>
/* Modal styles */
#partBrowserModal {
  animation: fadeIn 0.2s ease-in;
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* Make table rows feel more clickable */
#partsListBody tr:hover {
  background-color: #f9fafb;
}
</style>
