<%# app/views/works_orders/_form.html.erb - Enhanced form with auto-pricing %>
<%= form_with model: works_order, local: true, class: "space-y-6" do |form| %>
  <% if works_order.errors.any? %>
    <div class="bg-red-50 border border-red-200 rounded-md p-4">
      <div class="flex">
        <div class="ml-3">
          <h3 class="text-sm font-medium text-red-800">
            <%= pluralize(works_order.errors.count, "error") %> prohibited this works order from being saved:
          </h3>
          <div class="mt-2 text-sm text-red-700">
            <ul class="list-disc list-inside space-y-1">
              <% works_order.errors.full_messages.each do |message| %>
                <li><%= message %></li>
              <% end %>
            </ul>
          </div>
        </div>
      </div>
    </div>
  <% end %>

  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Works Order Details</h3>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      <!-- Customer Order Selection -->
      <div class="sm:col-span-2">
        <%= form.label :customer_order_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <% if @customer_order.present? && @customer_orders.length == 1 %>
          <!-- Show as read-only text when pre-selected -->
          <div class="mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-50 text-gray-900">
            <%= @customer_order.customer.name %> - <%= @customer_order.number %>
          </div>
          <%= form.hidden_field :customer_order_id, value: @customer_order.id %>
          <p class="mt-1 text-xs text-gray-500">Pre-selected from the customer order you came from</p>
        <% else %>
          <%= form.select :customer_order_id,
              options_for_select(
                [['Select Customer Order', '']] +
                (@customer_orders&.map { |co| ["#{co.customer.name} - #{co.number}", co.id] } || []),
                works_order.customer_order_id
              ),
              {},
              {
                class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm"
              } %>
        <% end %>
      </div>

      <!-- Customer Reference (optional) -->
      <div class="sm:col-span-2">
        <%= form.label :customer_reference, "Customer Reference (optional)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.text_field :customer_reference,
            placeholder: "e.g., PO number, line item, serial number",
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm" %>
        <p class="mt-1 text-xs text-gray-500">
          Optional field for customer's internal reference. For serial numbers, and serial number-like things.
        </p>
      </div>

      <!-- Part Number Selection -->
      <div class="sm:col-span-2">
        <%= form.label :part_id, "Part Number", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :part_id,
            options_for_select([['Select Part Number', '']] + @parts.map { |p| ["#{p.part_number}", p.id] }, works_order.part_id),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true,
              onchange: "updatePartDetails(this)"
            } %>
        <p class="mt-1 text-xs text-gray-500">
          Select the part number to be processed (if you do not see the part
          <% if @customer_order.present? %>
            <%= link_to "create it here", new_part_path(customer_id: @customer_order.customer.id),
                target: "_blank",
                class: "text-blue-600 hover:text-blue-800 underline",
                rel: "noopener noreferrer" %>
          <% else %>
            <%= link_to "create it here", new_part_path,
                target: "_blank",
                class: "text-blue-600 hover:text-blue-800 underline",
                rel: "noopener noreferrer" %>
          <% end %>
          and then
          <%= link_to "refresh", request.url,
              class: "text-blue-600 hover:text-blue-800 underline cursor-pointer",
              onclick: "location.reload(); return false;" %>)
        </p>
      </div>

      <!-- Quantity -->
      <div>
        <%= form.label :quantity, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.number_field :quantity,
            placeholder: "Enter quantity",
            min: 1,
            class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
            required: true,
            onchange: "recalculateTotalPrice()" %>
      </div>

      <!-- Release Level -->
      <div>
        <%= form.label :release_level_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :release_level_id,
            options_for_select([['Select Release Level', '']] + @release_levels.map { |rl| [rl.name, rl.id] }, works_order.release_level_id),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true
            } %>
      </div>

      <!-- Transport Method -->
      <div>
        <%= form.label :transport_method_id, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :transport_method_id,
            options_for_select([['Select Transport Method', '']] + @transport_methods.map { |tm| [tm.name, tm.id] }, works_order.transport_method_id),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true
            } %>
      </div>
    </div>
  </div>

  <!-- Pricing Section -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Pricing</h3>

    <div class="grid grid-cols-1 gap-6 sm:grid-cols-2">
      <!-- Price Type -->
      <div class="sm:col-span-2">
        <%= form.label :price_type, class: "block text-sm font-medium text-gray-700 mb-1" %>
        <%= form.select :price_type,
            options_for_select([
              ['Each (price per part)', 'each'],
              ['Lot (total job price)', 'lot']
            ], works_order.price_type || 'each'),
            {},
            {
              class: "mt-1 block w-full border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              required: true,
              onchange: "togglePriceFields(this.value)"
            } %>
      </div>

      <!-- Each Price (shown when price_type is 'each') -->
      <div id="each_price_field" class="sm:col-span-1" style="<%= works_order.price_type == 'lot' ? 'display: none;' : '' %>">
        <%= form.label :each_price, "Price per part (£)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <%= form.number_field :each_price,
              step: 0.01,
              min: 0,
              placeholder: "0.00",
              class: "block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "each_price_input",
              onblur: "formatCurrency(this)",
              onchange: "recalculateTotalPrice()" %>
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Enter the price per individual part (auto-populated from part standard price)
        </p>
      </div>

      <!-- Total Price Display (shown when price_type is 'each') -->
      <div id="total_price_display" class="sm:col-span-1" style="<%= works_order.price_type == 'lot' ? 'display: none;' : '' %>">
        <label class="block text-sm font-medium text-gray-700 mb-1">Total Job Price (calculated)</label>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <input type="text"
                 id="total_price_readonly"
                 readonly
                 placeholder="0.00"
                 class="block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 bg-gray-50 text-gray-900 sm:text-sm cursor-not-allowed">
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Automatically calculated as: quantity × price per part
        </p>
      </div>

      <!-- Lot Price (shown when price_type is 'lot') -->
      <div id="lot_price_field" class="sm:col-span-2" style="<%= works_order.price_type == 'each' ? 'display: none;' : '' %>">
        <%= form.label :lot_price, "Total job price (£)", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <%= form.number_field :lot_price,
              step: 0.01,
              min: 0,
              placeholder: "0.00",
              class: "block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm",
              id: "lot_price_input",
              onblur: "formatCurrency(this)" %>
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Enter the total price for the entire job regardless of quantity (includes minimum charges, setup fees, etc.)
        </p>
      </div>
    </div>
  </div>

  <!-- Additional Charges -->
  <div class="bg-white shadow rounded-lg p-6">
    <h3 class="text-lg font-medium text-gray-900 mb-4">Additional Charges (for invoicing)</h3>

    <div class="grid grid-cols-1 gap-6">
      <!-- Additional Charges Checkboxes -->
      <div>
        <%= form.label :selected_charge_ids, "Select Additional Charges", class: "block text-sm font-medium text-gray-700 mb-1" %>
        <% if defined?(@additional_charge_presets) && @additional_charge_presets.any? %>
          <div class="mt-1 space-y-2 max-h-64 overflow-y-auto border border-gray-300 rounded-md p-3 bg-white">
            <% @additional_charge_presets.each do |preset| %>
              <label class="flex items-start">
                <%= check_box_tag "works_order[selected_charge_ids][]",
                    preset.id,
                    works_order.selected_charge_ids&.include?(preset.id.to_s),
                    {
                      class: "rounded border-gray-300 text-blue-600 shadow-sm focus:border-blue-300 focus:ring focus:ring-offset-0 focus:ring-blue-200 focus:ring-opacity-50 mt-0.5 flex-shrink-0",
                      onchange: "handleAdditionalChargeSelection()"
                    } %>
                <span class="ml-2 text-sm text-gray-900 leading-tight">
                  <strong><%= preset.name %></strong>
                  <% if preset.is_variable? %>
                    <span class="inline-flex px-2 py-1 text-xs font-semibold rounded-full bg-yellow-100 text-yellow-800 ml-2">
                      Variable
                    </span>
                  <% else %>
                    <span class="text-green-600 font-semibold ml-2">£<%= sprintf("%.2f", preset.amount) %></span>
                  <% end %>
                  <% if preset.description.present? %>
                    <br>
                    <span class="text-gray-600 text-xs"><%= preset.description %></span>
                  <% end %>
                </span>
              </label>
            <% end %>
          </div>
          <!-- Hidden field to ensure empty array is sent when nothing is selected -->
          <%= hidden_field_tag "works_order[selected_charge_ids][]", "", id: "additional_charge_placeholder" %>
          <p class="mt-1 text-xs text-gray-500">
            Select charges to include when creating invoices from this works order. Variable charges will allow custom amounts.
          </p>
        <% else %>
          <div class="mt-1 border border-gray-300 rounded-md p-3 bg-gray-50 text-gray-500 text-sm">
            No additional charges available. Check that additional charge presets have been created and are enabled.
          </div>
        <% end %>
      </div>

      <!-- Variable Charge Amount Inputs (hidden by default) -->
      <div id="variable_charges_section" class="hidden">
        <h4 class="text-sm font-medium text-gray-700 mb-2">Variable Charge Amounts</h4>
        <div id="variable_charge_inputs">
          <!-- Dynamic inputs will be added here by JavaScript -->
        </div>
      </div>
    </div>
  </div>

  <!-- Form Actions -->
  <div class="flex justify-end space-x-3">
    <%= link_to "Cancel", works_order.persisted? ? works_order : works_orders_path,
        class: "bg-gray-300 hover:bg-gray-400 text-gray-800 font-bold py-2 px-4 rounded" %>
    <%= form.submit works_order.persisted? ? "Update Works Order" : "Create Works Order",
        class: "bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" %>
  </div>
<% end %>

<!-- JavaScript -->
<script>
// Parts data for JavaScript - ENHANCED with pricing
window.partsData = {
  <% if defined?(@parts) && @parts %>
    <% @parts.each do |part| %>
      "<%= part.id %>": {
        "part_number": "<%= j part.part_number %>",
        "part_issue": "<%= j part.part_issue %>",
        "description": "<%= j (part.description || "#{part.part_number} component") %>",
        "each_price": "<%= part.each_price || 0 %>"
      },
    <% end %>
  <% end %>
};

// Additional charges data for JavaScript
window.additionalChargesData = {
  <% if defined?(@additional_charge_presets) && @additional_charge_presets %>
    <% @additional_charge_presets.each do |preset| %>
      "<%= preset.id %>": {
        "name": "<%= j preset.name %>",
        "is_variable": <%= preset.is_variable? %>,
        "amount": <%= preset.amount || 0 %>,
        "display_name": "<%= j preset.display_name %>"
      },
    <% end %>
  <% end %>
};

// Currency formatting function
function formatCurrency(input) {
  let value = input.value;

  // Remove any non-numeric characters except decimal point
  value = value.replace(/[^\d.]/g, '');

  // Handle multiple decimal points
  const parts = value.split('.');
  if (parts.length > 2) {
    value = parts[0] + '.' + parts.slice(1).join('');
  }

  // Convert to number and back to ensure proper formatting
  const numValue = parseFloat(value);

  if (!isNaN(numValue) && numValue >= 0) {
    // Format to 2 decimal places
    input.value = numValue.toFixed(2);
  } else if (value === '' || value === '.') {
    // Allow empty or just decimal point while typing
    input.value = '';
  } else {
    // Invalid input, reset to 0.00
    input.value = '0.00';
  }

  // Recalculate total if this is the each price field
  if (input.id === 'each_price_input') {
    recalculateTotalPrice();
  }
}

// Simplified Part selection handler - only handles pricing
function updatePartDetails(selectElement) {
  const partId = selectElement.value;
  const eachPriceField = document.getElementById('each_price_input');

  if (partId && window.partsData) {
    const part = window.partsData[partId];
    if (part && part.each_price && parseFloat(part.each_price) > 0) {
      eachPriceField.value = parseFloat(part.each_price).toFixed(2);
      recalculateTotalPrice();
      showPriceAutoPopulatedNotification(part.each_price);
    }
  } else {
    // Clear price if no part selected
    eachPriceField.value = '';
    recalculateTotalPrice();
  }
}

// Optional: Show notification when price is auto-populated
function showPriceAutoPopulatedNotification(price) {
  const eachPriceField = document.getElementById('each_price_input');
  const originalBorder = eachPriceField.style.borderColor;

  // Briefly highlight the field to show it was auto-populated
  eachPriceField.style.borderColor = '#10B981'; // Green border
  eachPriceField.style.backgroundColor = '#F0FDF4'; // Light green background

  setTimeout(() => {
    eachPriceField.style.borderColor = originalBorder;
    eachPriceField.style.backgroundColor = '';
  }, 1500);
}

// Calculate total price for 'each' pricing
function recalculateTotalPrice() {
  const priceType = document.getElementById('works_order_price_type').value;

  if (priceType === 'each') {
    const quantity = parseInt(document.getElementById('works_order_quantity').value) || 0;
    const eachPrice = parseFloat(document.getElementById('each_price_input').value) || 0;
    const totalPrice = quantity * eachPrice;

    const totalPriceDisplay = document.getElementById('total_price_readonly');
    if (totalPriceDisplay) {
      totalPriceDisplay.value = totalPrice.toFixed(2);
    }
  }
}

// Pricing field toggle
function togglePriceFields(priceType) {
  const eachPriceField = document.getElementById('each_price_field');
  const totalPriceDisplay = document.getElementById('total_price_display');
  const lotPriceField = document.getElementById('lot_price_field');
  const eachPriceInput = document.getElementById('each_price_input');
  const lotPriceInput = document.getElementById('lot_price_input');

  if (priceType === 'each') {
    // Show each price fields, hide lot price field
    eachPriceField.style.display = 'block';
    totalPriceDisplay.style.display = 'block';
    lotPriceField.style.display = 'none';

    // Make each price required, lot price not required
    eachPriceInput.required = true;
    lotPriceInput.required = false;

    // Calculate total price
    recalculateTotalPrice();

  } else {
    // Show lot price field, hide each price fields
    eachPriceField.style.display = 'none';
    totalPriceDisplay.style.display = 'none';
    lotPriceField.style.display = 'block';

    // Make lot price required, each price not required
    lotPriceInput.required = true;
    eachPriceInput.required = false;

    // Clear each price when switching to lot pricing
    eachPriceInput.value = '';
  }
}

function handleAdditionalChargeSelection() {
  const checkboxes = document.querySelectorAll('input[name="works_order[selected_charge_ids][]"]:checked');
  const variableSection = document.getElementById('variable_charges_section');
  const variableInputs = document.getElementById('variable_charge_inputs');

  // Clear existing variable inputs
  if (variableInputs) {
    variableInputs.innerHTML = '';
  }

  let hasVariableCharges = false;

  // Check selected checkboxes for variable charges
  checkboxes.forEach(checkbox => {
    // Skip the hidden placeholder field
    if (checkbox.value === '') return;

    const chargeId = checkbox.value;
    const chargeData = window.additionalChargesData[chargeId];

    if (chargeData && chargeData.is_variable) {
      hasVariableCharges = true;

      // Create input for variable charge
      const inputDiv = document.createElement('div');
      inputDiv.className = 'mb-3';
      inputDiv.innerHTML = `
        <label for="custom_amount_${chargeId}" class="block text-sm font-medium text-gray-700 mb-1">
          ${chargeData.name} - Custom Amount (£)
        </label>
        <div class="mt-1 relative rounded-md shadow-sm">
          <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
            <span class="text-gray-500 sm:text-sm">£</span>
          </div>
          <input type="number"
                 name="works_order[custom_amounts][${chargeId}]"
                 id="custom_amount_${chargeId}"
                 step="0.01"
                 min="0"
                 placeholder="${chargeData.amount}"
                 class="block w-full pl-7 border border-gray-300 rounded-md shadow-sm py-2 px-3 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm">
        </div>
        <p class="mt-1 text-xs text-gray-500">
          Default: £${chargeData.amount} (leave blank to use default)
        </p>
      `;

      if (variableInputs) {
        variableInputs.appendChild(inputDiv);
      }
    }
  });

  // Show/hide variable charges section
  if (variableSection) {
    if (hasVariableCharges) {
      variableSection.classList.remove('hidden');
    } else {
      variableSection.classList.add('hidden');
    }
  }
}

// Initialize on page load
document.addEventListener('DOMContentLoaded', function() {
  const priceTypeSelect = document.querySelector('#works_order_price_type');
  if (priceTypeSelect) {
    togglePriceFields(priceTypeSelect.value);
  }

  // Format existing values on page load
  const eachPriceInput = document.getElementById('each_price_input');
  const lotPriceInput = document.getElementById('lot_price_input');

  if (eachPriceInput && eachPriceInput.value) {
    formatCurrency(eachPriceInput);
  }

  if (lotPriceInput && lotPriceInput.value) {
    formatCurrency(lotPriceInput);
  }

  // Calculate initial total price if in 'each' mode
  recalculateTotalPrice();

  // Initialize additional charges handling
  handleAdditionalChargeSelection();
});
</script>
